{
   "@context": [
      "https://www.w3.org/2022/wot/td/v1.1"
   ],
   "title": "Car",
   "description": "A car with an engine, indicators, and wear stats.",
   "@type": "Thing",
   "id": "urn:io.eclipseprojects.ditto:smart-car",
   "base": "http://localhost:8080/api/2/things/io.eclipseprojects.ditto:smart-car",
   "version": {
      "model": "2.0.0",
      "instance": "2.0.0"
   },
   "links": [
      {
         "rel": "type",
         "href": "https://raw.githubusercontent.com/aleshark87/WoTModels/main/car.jsonld",
         "type": "application/tm+json"
      },
      {
         "rel": "item",
         "type": "application/td+json",
         "href": "/features/status"
      },
      {
         "rel": "item",
         "type": "application/td+json",
         "href": "/features/indicator-light"
      },
      {
         "rel": "item",
         "type": "application/td+json",
         "href": "/features/wear-time"
      }
   ],
   "security": "basic_sc",
   "securityDefinitions": {
      "basic_sc": {
         "in": "header",
         "scheme": "basic"
      }
   },
   "support": "https://www.eclipse.org/ditto/",
   "created": "2022-03-29T15:23:42.411289797Z",
   "forms": [
      {
         "op": "readallproperties",
         "href": "/attributes{?channel,timeout}",
         "htv:methodName": "GET",
         "contentType": "application/json",
         "additionalResponses": [
            {
               "success": false,
               "schema": "dittoError"
            }
         ]
      },
      {
         "op": "readmultipleproperties",
         "href": "/attributes{?fields,channel,timeout}",
         "htv:methodName": "GET",
         "contentType": "application/json",
         "additionalResponses": [
            {
               "success": false,
               "schema": "dittoError"
            }
         ]
      },
      {
         "op": "writeallproperties",
         "href": "/attributes{?channel,timeout,response-required}",
         "htv:methodName": "PUT",
         "contentType": "application/json",
         "additionalResponses": [
            {
               "success": false,
               "schema": "dittoError"
            }
         ]
      },
      {
         "op": "writemultipleproperties",
         "href": "/attributes{?channel,timeout,response-required}",
         "htv:methodName": "PATCH",
         "contentType": "application/merge-patch+json",
         "additionalResponses": [
            {
               "success": false,
               "schema": "dittoError"
            }
         ]
      },
      {
         "op": [
            "observeallproperties",
            "unobserveallproperties"
         ],
         "href": "/attributes",
         "htv:methodName": "GET",
         "subprotocol": "sse",
         "contentType": "text/event-stream",
         "additionalResponses": [
            {
               "success": false,
               "schema": "dittoError"
            }
         ]
      },
      {
         "op": [
            "subscribeallevents",
            "unsubscribeallevents"
         ],
         "href": "/outbox/messages",
         "htv:methodName": "GET",
         "subprotocol": "sse",
         "contentType": "text/event-stream",
         "additionalResponses": [
            {
               "success": false,
               "schema": "dittoError"
            }
         ]
      }
   ],
   "properties": {
      "manufacturer": {
         "tile": "Manufacturer",
         "type": "string",
         "readOnly": true,
         "observable": true,
         "forms": [
            {
               "op": "readproperty",
               "href": "/attributes/manufacturer{?channel,timeout}",
               "htv:methodName": "GET",
               "contentType": "application/json",
               "additionalResponses": [
                  {
                     "success": false,
                     "schema": "dittoError"
                  }
               ]
            },
            {
               "op": [
                  "observeproperty",
                  "unobserveproperty"
               ],
               "href": "/attributes/manufacturer",
               "htv:methodName": "GET",
               "subprotocol": "sse",
               "contentType": "text/event-stream",
               "additionalResponses": [
                  {
                     "success": false,
                     "schema": "dittoError"
                  }
               ]
            }
         ]
      },
      "serialNo": {
         "tile": "Serial number",
         "type": "string",
         "readOnly": true,
         "observable": true,
         "forms": [
            {
               "op": "readproperty",
               "href": "/attributes/serialNo{?channel,timeout}",
               "htv:methodName": "GET",
               "contentType": "application/json",
               "additionalResponses": [
                  {
                     "success": false,
                     "schema": "dittoError"
                  }
               ]
            },
            {
               "op": [
                  "observeproperty",
                  "unobserveproperty"
               ],
               "href": "/attributes/serialNo",
               "htv:methodName": "GET",
               "subprotocol": "sse",
               "contentType": "text/event-stream",
               "additionalResponses": [
                  {
                     "success": false,
                     "schema": "dittoError"
                  }
               ]
            }
         ]
      }
   },
   "actions": {
      "toggle-engine": {
         "title": "Switch The Engine",
         "description": "Switches the engine on/off based on the passed in boolean.",
         "type": "boolean",
         "forms": [
            {
               "op": "invokeaction",
               "href": "/inbox/messages/toggle-engine{?timeout,response-required}",
               "htv:methodName": "POST",
               "contentType": "application/json",
               "additionalResponses": [
                  {
                     "success": false,
                     "schema": "dittoError"
                  }
               ]
            }
         ]
      }
   },
   "uriVariables": {
      "channel": {
         "type": "string",
         "title": "The Ditto channel to interact with.",
         "description": "Defines to which channel to route the command: 'twin' (digital twin) or 'live' (the device).",
         "enum": [
            "twin",
            "live"
         ],
         "default": "twin"
      },
      "timeout": {
         "type": "integer",
         "title": "The timeout to apply.",
         "description": "Defines how long the backend should wait (in seconds) for completion of the request. A value of '0' applies fire and forget semantics for the command.",
         "minimum": 0,
         "maximum": 60,
         "default": 60
      },
      "response-required": {
         "type": "boolean",
         "title": "If a response is required.",
         "description": "Defines whether a response is required to the API call or not.",
         "default": true
      },
      "fields": {
         "type": "string",
         "title": "Fields to select.",
         "description": "Contains a comma-separated list of fields (e.g. property names) to be included in the returned JSON."
      }
   },
   "schemaDefinitions": {
      "dittoError": {
         "type": "object",
         "title": "Ditto error.",
         "description": "Provides additional information about an occurred error and how to resolve it.",
         "properties": {
            "description": {
               "type": "string",
               "title": "Error description.",
               "description": "Contains further information about the error e.g. a hint what caused the problem and how to solve it."
            },
            "status": {
               "type": "integer",
               "title": "Status code.",
               "description": "The status code of the error with HTTP status code semantics (e.g.: 4xx for user errors, 5xx for server errors).",
               "minimum": 400,
               "maximum": 599
            },
            "href": {
               "type": "string",
               "title": "Error link.",
               "description": "A link to further information about the error and how to fix it.",
               "format": "uri"
            },
            "message": {
               "type": "string",
               "title": "Error message.",
               "description": "The human readable message that explains what went wrong during the execution of a command/message."
            },
            "error": {
               "type": "string",
               "title": "Error code identifier.",
               "description": "The error code or identifier that uniquely identifies the error."
            }
         },
         "required": [
            "status",
            "error",
            "message"
         ]
      }
   }
}
